# %% [markdown]

# ## 得られたデータが汚かった場合
#
# 往々にして，もともとのデータは汚い。
# うまくデータを取り出す方法をいくつかのケースについて紹介する。


# %% [markdown]

# ## 数値としてデータが記述されていない場合
#
# data/02.csv が該当。

# %%

# import


# %%

# read data

# dirty_data =

# %%

# Yes 選択率を集計する。
# Yes が選択されたケースは，
# 'action' 列の値が 'yesno' かつ 'answer' の値が 'y'のとき。


# %% [markdown]

# 特性質問紙はかなり曲者。
# 選択肢はいくつかあるが，手間の小さい順に
#
# 1. データを書き換える
# 2. ラムダ式を用いる
# 3. 列ずつループさせて頑張る
#
# 今回は，後学のために 3. 1列ずつループさせて頑張る の方法でやる。

# %%

# DataFrame を一列ずつ取り出すのに，iterrows メソッドを使う。
# インデックスラベルと，行データを順番に取り出す for ループが書ける。


# %%

# ループしながらスコアの合計を求める


# %%

# DataFrameに変換する


# %% [markdown]

# ## 練習 最も汚いデータの部類の集計をする。
#
# data/03.csv ファイル内の，Yes 選択率を求めよう！
#
# data/03.csv の Yes/No 選択において，Yes が左側に呈示された場合は category 列の値が ly，
# Yes が右側に呈示された場合は ry となる。
# そして，answer 列には，参加者の選択が左右どちらだったがが示されている。

# %%

# data/03.csv ファイル内の，Yes 選択率を求めよう。

# read

# dirtiest_data =

# %%

# %%

# ### 特性質問紙の集計をする。
#
# groupby を用いることは可能だが，ループで求める方法でやってみる。
#
# 文字列の，endswith メソッドで，その文字列の末尾が一致するかを求めることができる。
#
# 'Hello World'.endswith('World')
#
# の実行結果は，True になるし，
#
# 'Hello World'.endswith('xxxxx')
#
# の実行結果は，False になる。

# %%

# 今回のデータは，末尾に尺度の名前がついている。


# %%

# ループしながら各尺度の合計点数を求める。
